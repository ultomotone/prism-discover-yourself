-- 1) Create enum for scale types
DO $$ BEGIN
  CREATE TYPE public.assessment_scale_type AS ENUM (
    'LIKERT_1_5',
    'LIKERT_1_7',
    'STATE_1_7',
    'FORCED_CHOICE_2',
    'FORCED_CHOICE_4',
    'FORCED_CHOICE_5',
    'CATEGORICAL_5',
    'FREQUENCY'
  );
EXCEPTION
  WHEN duplicate_object THEN NULL;
END $$;

-- 2) Create scoring key table
CREATE TABLE IF NOT EXISTS public.assessment_scoring_key (
  question_id integer PRIMARY KEY,
  tag text NULL,
  scale_type public.assessment_scale_type NOT NULL,
  reverse_scored boolean NOT NULL DEFAULT false,
  fc_map jsonb NULL,
  pair_group text NULL,
  social_desirability boolean NOT NULL DEFAULT false,
  weight numeric NOT NULL DEFAULT 1,
  created_at timestamptz NOT NULL DEFAULT now(),
  updated_at timestamptz NOT NULL DEFAULT now()
);

-- 3) Enable RLS
ALTER TABLE public.assessment_scoring_key ENABLE ROW LEVEL SECURITY;

-- 4) Policies: public readable; only service role can write
DO $$ BEGIN
  CREATE POLICY "Scoring key is publicly readable" ON public.assessment_scoring_key
  FOR SELECT USING (true);
EXCEPTION WHEN duplicate_object THEN NULL; END $$;

DO $$ BEGIN
  CREATE POLICY "Only service role can insert scoring key" ON public.assessment_scoring_key
  FOR INSERT WITH CHECK (auth.role() = 'service_role');
EXCEPTION WHEN duplicate_object THEN NULL; END $$;

DO $$ BEGIN
  CREATE POLICY "Only service role can update scoring key" ON public.assessment_scoring_key
  FOR UPDATE USING (auth.role() = 'service_role');
EXCEPTION WHEN duplicate_object THEN NULL; END $$;

-- 5) Timestamp trigger
DO $$ BEGIN
  CREATE TRIGGER update_assessment_scoring_key_updated_at
  BEFORE UPDATE ON public.assessment_scoring_key
  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();
EXCEPTION WHEN duplicate_object THEN NULL; END $$;

-- 6) Helpful indexes
DO $$ BEGIN
  CREATE INDEX idx_scoring_key_tag ON public.assessment_scoring_key (tag);
EXCEPTION WHEN duplicate_table THEN NULL; END $$;

DO $$ BEGIN
  CREATE INDEX idx_scoring_key_pair_group ON public.assessment_scoring_key (pair_group);
EXCEPTION WHEN duplicate_table THEN NULL; END $$;

-- 7) Seed data (upsert to allow re-runs)
INSERT INTO public.assessment_scoring_key
  (question_id, tag, scale_type, reverse_scored, fc_map, pair_group, social_desirability, weight)
VALUES
  (1,'Ti_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (2,'Ti_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (3,'Ti_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (4,'Ti_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (5,'Ti_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (6,'Ti_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (7,'Te_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (8,'Te_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (9,'Te_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (10,'Te_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (11,'Te_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (12,'Te_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (13,'Fi_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (14,'Fi_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (15,'Fi_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (16,'Fi_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (17,'Fi_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (18,'Fi_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (19,'Fe_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (20,'Fe_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (21,'Fe_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (22,'Fe_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (23,'Fe_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (24,'Fe_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (25,'Ni_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (26,'Ni_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (27,'Ni_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (28,'Ni_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (29,'Ni_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (30,'Ni_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (31,'Ne_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (32,'Ne_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (33,'Ne_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (34,'Ne_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (35,'Ne_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (36,'Ne_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (37,'Si_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (38,'Si_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (39,'Si_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (40,'Si_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (41,'Si_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (42,'Si_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (43,'Se_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (44,'Se_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (45,'Se_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (46,'Se_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (47,'Se_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (48,'Se_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (49,'Ti_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (50,'Ti_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (51,'Ti_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (52,'Ti_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (53,'Ti_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (54,'Te_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (55,'Te_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (56,'Te_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (57,'Te_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (58,'Te_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (59,'Fi_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (60,'Fi_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (61,'Fi_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (62,'Fi_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (63,'Fi_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (64,'Fe_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (65,'Fe_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (66,'Fe_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (67,'Fe_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (68,'Fe_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (69,'Ni_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (70,'Ni_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (71,'Ni_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (72,'Ni_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (73,'Ni_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (74,'Ne_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (75,'Ne_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (76,'Ne_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (77,'Ne_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (79,'Si_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (80,'Si_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (81,'Si_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (82,'Si_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (83,'Si_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (84,'Se_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (85,'Se_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (86,'Se_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (87,'Se_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (88,'Se_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (89,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (90,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (91,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (92,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (93,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (94,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (95,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (96,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (97,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (98,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (99,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (100,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (101,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (102,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (103,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (104,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (105,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (106,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (107,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (108,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (109,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (110,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (111,'N','LIKERT_1_7',TRUE,NULL,NULL,FALSE,1),
  (112,'N','LIKERT_1_7',FALSE,NULL,NULL,FALSE,1),
  (113,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (114,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (115,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (116,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (117,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (118,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (119,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (120,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (121,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (122,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (123,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (124,NULL,'FORCED_CHOICE_4',FALSE,'{"A":"Core","B":"Critic","C":"Instinct","D":"Hidden"}',NULL,FALSE,1),
  (125,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (126,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (127,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (128,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (129,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (130,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (131,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (132,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (133,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (134,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (135,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (136,'Core','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (137,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (138,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (139,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (140,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (141,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (142,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (143,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (144,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (145,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (146,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (147,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (148,'Critic','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (149,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (150,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (151,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (152,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (153,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (154,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (155,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (156,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (157,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (158,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (159,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (160,'Hidden','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (161,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (162,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (163,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (164,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (165,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (166,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (167,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (168,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (169,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (170,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (171,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (172,'Instinct','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (173,'Growth','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (174,'Growth','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (175,'Growth','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (176,'Growth','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (177,'Growth','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (179,'Growth','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (180,'Growth','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (181,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (182,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (183,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (184,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (185,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (186,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (187,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (188,'Regulation','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (189,'Healing','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (190,'Healing','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (191,'Healing','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (192,'Healing','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (193,'Healing','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (194,'Healing','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (195,NULL,'FORCED_CHOICE_4',FALSE,NULL,NULL,FALSE,1),
  (196,NULL,'FORCED_CHOICE_4',FALSE,NULL,NULL,FALSE,1),
  (197,NULL,'FORCED_CHOICE_4',FALSE,NULL,NULL,FALSE,1),
  (198,NULL,'FORCED_CHOICE_4',FALSE,NULL,NULL,FALSE,1),
  (199,NULL,'FORCED_CHOICE_4',FALSE,NULL,NULL,FALSE,1),
  (200,NULL,'FORCED_CHOICE_4',FALSE,NULL,NULL,FALSE,1),
  (201,NULL,'STATE_1_7',FALSE,NULL,NULL,FALSE,1),
  (202,NULL,'STATE_1_7',FALSE,NULL,NULL,FALSE,1),
  (203,NULL,'STATE_1_7',FALSE,NULL,NULL,FALSE,1),
  (204,NULL,'STATE_1_7',FALSE,NULL,NULL,FALSE,1),
  (205,NULL,'STATE_1_7',FALSE,NULL,NULL,FALSE,1),
  (206,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Ti","B":"Te"}',NULL,FALSE,1),
  (207,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Fi","B":"Fe"}',NULL,FALSE,1),
  (208,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Ni","B":"Ne"}',NULL,FALSE,1),
  (209,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Si","B":"Se"}',NULL,FALSE,1),
  (210,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Ti","B":"Fi"}',NULL,FALSE,1),
  (211,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Te","B":"Fe"}',NULL,FALSE,1),
  (212,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Ni","B":"Si"}',NULL,FALSE,1),
  (213,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Ne","B":"Se"}',NULL,FALSE,1),
  (217,'Ti_S','LIKERT_1_5',FALSE,NULL,'217-218',FALSE,1),
  (218,'Ti_S','LIKERT_1_5',TRUE,NULL,'217-218',FALSE,1),
  (219,'Fe_S','LIKERT_1_5',FALSE,NULL,'219-220',FALSE,1),
  (220,'Fe_S','LIKERT_1_5',TRUE,NULL,'219-220',FALSE,1),
  (221,'Se_S','LIKERT_1_5',FALSE,NULL,'221-222',FALSE,1),
  (222,'Se_S','LIKERT_1_5',TRUE,NULL,'221-222',FALSE,1),
  (223,'Si_S','LIKERT_1_5',FALSE,NULL,'223-224',FALSE,1),
  (224,'Si_S','LIKERT_1_5',TRUE,NULL,'223-224',FALSE,1),
  (225,'SD','LIKERT_1_5',FALSE,NULL,NULL,TRUE,1),
  (226,'SD','LIKERT_1_5',FALSE,NULL,NULL,TRUE,1),
  (227,'SD','LIKERT_1_5',FALSE,NULL,NULL,TRUE,1),
  (228,'SD','LIKERT_1_5',FALSE,NULL,NULL,TRUE,1),
  (229,'SD','LIKERT_1_5',FALSE,NULL,NULL,TRUE,1),
  (230,'SD','LIKERT_1_5',FALSE,NULL,NULL,TRUE,1),
  (231,'Ne_D','CATEGORICAL_5',FALSE,NULL,NULL,FALSE,1),
  (232,NULL,'FREQUENCY',FALSE,NULL,NULL,FALSE,1),
  (233,NULL,'CATEGORICAL_5',FALSE,NULL,NULL,FALSE,1),
  (234,'Fe_D','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1),
  (235,NULL,'FREQUENCY',FALSE,NULL,NULL,FALSE,1),
  (236,NULL,'CATEGORICAL_5',FALSE,NULL,NULL,FALSE,1),
  (237,NULL,'FORCED_CHOICE_5',FALSE,'{"A":"Ni","B":"Ne","C":"Fe","D":"Si","E":"Ti"}',NULL,FALSE,1),
  (238,NULL,'FORCED_CHOICE_5',FALSE,'{"A":"Fe","B":"Si","C":"Te","D":"Ne","E":"Ti"}',NULL,FALSE,1),
  (239,NULL,'FORCED_CHOICE_5',FALSE,'{"A":"Te","B":"Ti","C":"Si","D":"Ne","E":"Ni"}',NULL,FALSE,1),
  (240,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Ne","B":"Ni"}',NULL,FALSE,1),
  (242,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Se","B":"Ni"}',NULL,FALSE,1),
  (243,'Ne_S','LIKERT_1_5',TRUE,NULL,NULL,FALSE,1),
  (244,'Fe_S','LIKERT_1_5',TRUE,NULL,NULL,FALSE,1),
  (245,'Fi_S','LIKERT_1_5',TRUE,NULL,NULL,FALSE,1),
  (246,NULL,'FORCED_CHOICE_2',FALSE,'{"A":"Ti","B":"Te"}',NULL,FALSE,1),
  (247,'Ne_S','LIKERT_1_5',FALSE,NULL,NULL,FALSE,1)
ON CONFLICT (question_id) DO UPDATE SET
  tag = EXCLUDED.tag,
  scale_type = EXCLUDED.scale_type,
  reverse_scored = EXCLUDED.reverse_scored,
  fc_map = EXCLUDED.fc_map,
  pair_group = EXCLUDED.pair_group,
  social_desirability = EXCLUDED.social_desirability,
  weight = EXCLUDED.weight,
  updated_at = now();